<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PtbRegresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA0JJREFUeF7l
        m7tu1EAUhtNAi0SHRBdF8Ao8A+IRUsLDpAFRQQMd1HkECmrS0dGlSh0JoYjlfGZt+fLbM+Mdx8c7v/RJ
        m5OdmXO8ntsZ+2S32y3NmXFuXBiXxg/j2rg17vbwGRv/4zt8lzKUVXVmQxoP5KHxyvhkENShoo7PBnVS
        t2pzNtI4k1PjrXFjLCXqpg3aUj4kI42JPDO+GNzK9yXaos3nhvIpGmmM5JHx3vhjrCXaxgd8UT4GkcYI
        Xho5+ncu4Qs+KV8nkcYJHhjvjL+GN+ETvuGj8l0ijSM8Nr4Z3oWP+KpiGCCNgqfGT2Mrwld8VrF0kMYe
        VPTL2JrwOXgRpLEFt9KWfvm+8H2yO0jjHgaTLfT5kIhhdGCUxj2MqMciYlExjl4A5lSPU91cEYtcJwwM
        BqsqT4ucXCKmwYqx88celpbHKmLrxNv5w2Bjs9Ta/rfx5v/H1URsnQ1UO3hgh7WEuP1eGLSxtr4aTczN
        B4M99hJb2u/GE6NuZ20RY5NPqJ0CEg259dHoZ3E8iFgrf2qncDJnJqfu73X9bTyIWKsfpnaKfFsutfu7
        wouIubkAJDBzqN/fFV5EorW5ADkWPqq/K7yImKsLQO79EE319zVI0RkFOICYq1B/X4MUnVOAU5g5iunv
        a5CiCwpwFJWq2P6+Bim6pADncbHy1t8VKbqiQOwM4LG/K1J0TQFOZkPy2t8VKbqlQGgD5Lm/K1J0R4HQ
        BfhgHPUFKL4LFD8Ipk6Dr41+o55IUTUNzlkIeR4XUlQthIpfChe/GcqxHfY0LqSo2g5D7EwwpdhxwYuI
        uckIkR7Koc2mxIpPinLr5k6Lj40LHjRIi8MSByNqXPCgwcEIFH80BkUfjgJHx0sejzMurKng8TgU/YAE
        FP+IDBT9kFRN0Y/JQfEPSkLRj8rWFP2wdA0VbelOwNdg8CCNI3ArbWFMwMfJ276NNE7AYMKI6nGKxCd8
        Gx3wFNIYAXOqp8USvsh5PoQ0RsKqiqXlUnuHGNE2PgxWeLFIYyJsLthhLbGVHhNt0eaqL072YY9NoiFn
        Zqkv6qaNZj9/KNJ4IGSAyLeRdMwxTlDHJl6eHqP/+vyVQVDq9Xn+d4+vz+9O/gGFFat8nX2yvAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>